ProgramContext(  for  )
├── SourceElementsContext(  for  )
│   ├── SourceElementContext(  for  )
│   │   └── StatementContext(  for  )
│   │       └── IterationStatementContext(  for  )
│   ├── SourceElementContext(  for  )
│   │   └── StatementContext(  for  )
│   │       └── IterationStatementContext(  for  )
│   │           └── TerminalNode(  for  )
│   ├── SourceElementContext(  (  )
│   │   └── StatementContext(  (  )
│   │       └── ExpressionStatementContext(  (  )
│   │           ├── ExpressionSequenceContext(  (  )
│   │           │   └── ParenthesizedExpressionContext(  (  )
│   │           │       ├── TerminalNode(  (  )
│   │           │       ├── ExpressionSequenceContext(  let  )
│   │           │       │   └── InExpressionContext(  let  )
│   │           │       │       ├── IdentifierExpressionContext(  let  )
│   │           │       │       │   ├── TerminalNode(  let  )
│   │           │       │       │   └── TerminalNode(  x  )
│   │           │       │       ├── TerminalNode(  in  )
│   │           │       │       └── IdentifierExpressionContext(  list  )
│   │           │       │           └── TerminalNode(  list  )
│   │           │       └── TerminalNode(  )  )
│   │           └── EosContext(  process  )
│   └── SourceElementContext(  process  )
│       └── StatementContext(  process  )
│           └── ExpressionStatementContext(  process  )
│               ├── ExpressionSequenceContext(  process  )
│               │   └── ArgumentsExpressionContext(  process  )
│               │       ├── IdentifierExpressionContext(  process  )
│               │       │   └── TerminalNode(  process  )
│               │       └── ArgumentsContext(  (  )
│               │           ├── TerminalNode(  (  )
│               │           ├── ArgumentListContext(  x  )
│               │           │   └── IdentifierExpressionContext(  x  )
│               │           │       └── TerminalNode(  x  )
│               │           └── TerminalNode(  )  )
│               └── EosContext(  ;  )
│                   └── TerminalNode(  ;  )
└── TerminalNode(  <EOF>  )

